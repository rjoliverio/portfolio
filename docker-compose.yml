version: "3"
services:
  #PHP Service
  api:
    build:
      context: ./api
    container_name: api
    restart: unless-stopped
    tty: true
    ports:
      - "9000:9000"
    environment:
      SERVICE_NAME: api
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./api/:/var/www
      - ./api/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
    depends_on:
      - db

  #NextJS Service
  client:
    build:
      context: ./client
      target: runner
    container_name: client
    volumes:
      - ./client:/app
    command: npm run dev
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
    networks:
      - app-network
    depends_on:
      - api

  #Nginx Service
  webserver:
    image: nginx:1.21
    container_name: webserver
    restart: unless-stopped
    tty: true
    links:
      - api
    ports:
      - "80:80"
    volumes:
      - ./api/:/var/www
      - ./api/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:5
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: portfolio
      MYSQL_ROOT_PASSWORD: password
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./api/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local
